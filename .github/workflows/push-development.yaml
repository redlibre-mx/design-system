name: (push -> development) Test, Push to Chromatic, and Publish Alpha
on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - development
#on:
#  push:
#    branches: [ $default-branch ]
#  pull_request:
#    branches: [ $default-branch ]

jobs:
  test:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        #node-version: [12.x, 14.x]
        node-version: [14.x]


    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    #- run: npm ci
    - id: cache-modules
      uses: actions/cache@v1
      with:
        path: ./node_modules
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
    
    - name: Install dependencies
      if: steps.cache-pipenv.outputs.cache-hit != 'true'
      run: |
        npm install
    

    - name: Lint SCSS
      run: npm run test:stylelint

    - name: Test with Storyshots (Take Snapshots -> Compare)
      run: npm run test:jest

    - name: Test with Eslint
      run: npm run test:eslint

    #- name: Test with TSC
    #run: npm run test:tsc

  chromatic-deployment:
    needs: test
    # Operating System
    runs-on: ubuntu-latest
    # Job steps
    steps:
      - uses: actions/checkout@v1
      - id: cache-modules
        uses: actions/cache@v1
        with:
          path: ./node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
      
      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          npm install

      - name: Publish to Chromatic
        uses: chromaui/action@v1
        # Chromatic GitHub Action options
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # ðŸ‘‡ Chromatic projectToken, refer to the manage page to obtain it.
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          exitZeroOnChanges: true # ðŸ‘ˆ Option to prevent the workflow from failing, in case there are changes (but no errors)
